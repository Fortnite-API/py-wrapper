[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

# Load setuptools info and dynamic version

[tool.setuptools]
packages = [
    "fortnite_api",
    "fortnite_api.cosmetics",
    "fortnite_api.cosmetics.variants",
]

[tool.setuptools.dynamic]
version = { attr = "fortnite_api.__version__" }
dependencies = { file = "requirements.txt" }

[tool.setuptools.package-data]
fortnite_api = ["py.typed"]

# And specify project specific metadata

[project]
name = "fortnite-api"
dynamic = ["version", "dependencies"]
authors = [
    { name = "Luc1412", email = 'Luc1412.lh@gmail.com' },
    { name = "Trevor Flahardy", email = "trevorflahardy@gmail.com" },
]
description = "A python wrapper for Fortnite-API.com"
readme = "README.md"
requires-python = ">=3.10.0"
license = { file = "LICENSE" }
keywords = [
    'fortnite',
    'fortnite-api.com',
    'shop',
    'cosmetics',
    'fortnite api',
    'fortnite shop',
]
classifiers = [
    'License :: OSI Approved :: MIT License',
    'Intended Audience :: Developers',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: 3.14',
    'Topic :: Internet',
    'Topic :: Software Development :: Libraries',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Utilities',
]


[project.optional-dependencies]
tests = [
    'pytest~=8.4',
    'pytest-asyncio~=1.2',
    'pytest-cov~=7.0',
    'python-dotenv~=1.2',
    'pytest-mock~=3.15',
]
docs = [
    'sphinx~=8.1',
    'sphinx-copybutton~=0.5.0',
    'sphinxcontrib-trio~=1.1',
    'sphinxcontrib-websupport~=2.0',
    'furo~=2025.9',
]
dev = ['ruff==0.14.3', 'discord.py~=2.6', 'pyright~=1.1.407', 'pre-commit~=4.3']
speed = ['orjson']

[project.urls]
"Home Page" = "https://github.com/Fortnite-API/py-wrapper"
Issues = "https://github.com/Fortnite-API/py-wrapper/issues"
Documentation = "https://fortnite-api.readthedocs.io/en/rewrite/"

# Pytest configuration

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = ["tests"]
addopts = "--import-mode=importlib"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

# Pyright configuration

[tool.pyright]
typeCheckingMode = "strict"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedImport = "error"
pythonVersion = "3.10"
reportPrivateUsage = "none"
exclude = ["**/__pycache__", "build", "dist", "docs"]
include = ["fortnite_api/", "tests/", "examples/"]

# Ruff formatting

[tool.ruff]
# Allow lines to be as long as 120.
line-length = 120

[tool.ruff.format]
# Prefer single quotes over double quotes.
quote-style = "preserve"

[tool.ruff.lint]
select = [
    "I",  # Isort
    "UP",  # Pyupgrade
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true
