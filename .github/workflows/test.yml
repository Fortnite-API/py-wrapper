# This workflow will ensure that the pushed contents to the repo
# are not majorly breaking.

name: test

on:
  push:
  pull_request:
    types: [ opened, reopened, synchronize ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '3.10', '3.x' ]
    name: pytest ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip" # Cache the pip packages to speed up the workflow
      - name: Set up UV
        uses: astral-sh/setup-uv@v6
      - name: Install Dependencies and Package
        run: uv sync --extra tests
      - name: Run Pytest Checks
        env:
          TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
        run: uv run pytest --cov=fortnite_api --import-mode=importlib -vs tests/