# This workflow will ensure that the pushed contents to the repo
# are not majorly breaking, and they comply with black standards.

name: Pytests

on:
  push:
  pull_request:
    types: [ opened, reopened, synchronize ]
  workflow_dispatch:

jobs:
  pytest:
    name: Pytest
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          cache: "pip" # Cache the pip packages to speed up the workflow

      - name: Install Dependencies and Package
        run: |
          python -m pip install -U pip setuptools
          pip install -U -r requirements.txt
          pip install -e .[tests]

      - name: Run Pytest Checks
        shell: bash
        env:
          TEST_API_KEY: ${{ secrets.TEST_API_KEY }}
        run: python -m pytest --cov=fortnite_api --import-mode=importlib -vs tests/

  black:
    name: Black Formatting Check
    runs-on: ubuntu-latest

    # Checkout the repository
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          cache: "pip" # Cache the pip packages to speed up the workflow

      - name: Install Dependencies and Project
        run: |
          python -m pip install -U pip setuptools
          pip install -U -r requirements.txt
          pip install -e .[dev]

      - name: Run Black Check
        run: black --check --diff --verbose fortnite_api

  isort:
    name: Isort Formatting Check
    runs-on: ubuntu-latest

    # Checkout the repository
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          cache: "pip" # Cache the pip packages to speed up the workflow

      - name: Install Dependencies and Project
        run: |
          python -m pip install -U pip setuptools
          pip install -U -r requirements.txt
          pip install -e .[dev]

      - name: Run Isort Check
        run: isort --check --diff fortnite_api